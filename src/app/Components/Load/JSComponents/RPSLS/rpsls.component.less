@import url("CSS/regular.min.css");
@import url("CSS/solid.min.css");
@import url("CSS/svg-with-js.min.css");
@import url("CSS/fontawesome.css");
@import url("CSS/site.css");
@import url("CSS/rpsls.css");

html {
  min-width: 574px;
}

header,
section {
  margin-bottom: 20px;
}

.game-field {
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}

@media screen and (max-width: 768px) {
  .game-field {
    flex-direction: column;
  }
}

.white {
  color: grey;
}

.opponent {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.opponent .opponent-hand {
  margin-top: 30px;
}

.opponent .opponent-hand,
.player .player-hand .player-hands {
  font-size: 120pt;
  line-height: 120pt;
}

.opponent-hand-choice {
  display: flex;
  align-items: center;
}

.opponent,
.score-player,
.score-opponent {
  text-align: center;
}

.player-hands:not(:last-of-type) {
  margin-right: 30pt;
}

.player-hand {
  font-size: 120pt;
}

.score-player,
.score-opponent {
  height: 100px;
  min-width: 200px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.player {
  width: 100%;
  display: flex;
  font-size: 32pt;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 20px;
  margin-bottom: 50px;
}

.player-hand-choices {
  background: #222;
  border-radius: 5px;
  border: solid 1px white;
  padding: 10px;
}

.score-outcome {
  font-size: 40pt;
}

.win-diagram-box {
  height: 210px;
  width: 210px;
  border: 1px solid white;
  background-color: black;
  margin: auto;
  display: flex;
  justify-content: center;
  align-items: center;
}

.win-diagram {
  height: 200px;
  width: 200px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.win-diagram > i {
  position: absolute;
  font-size: 1em;
  height: 1em;
  width: 1em;
}

@pentagonAngle: 72deg;
@translateY: 1.75em;

@flipAngle: 180deg;

@angle1: 36deg;
@angle2: 72deg;

@translateX1: -1em;
@translateX2: -2em;
// @translateX1: 0em;
// @translateX2: 0em;

@selectors: scissors, paper, rock, lizard, spock;

each(@selectors, {
  .dia-@{value} {
    @idx: @index - 1;
    @rotate1: (2 * @idx + 1) * @angle1;
    @rotate2: (@idx + 1) * @angle2;
    @angle: @idx * @pentagonAngle;transform: rotate(@angle) translateY(@translateY) rotate(-1 * @angle);

    & > i {
      display: grid;
      position: absolute;
      line-height: 0.20em;
      transform-origin: center;
      top: 0px;
      left: 0px;
    }

    &>i:nth-child(1) {
      transform: rotate(@rotate1) translateX(@translateX1) rotate(@flipAngle);
    }

    &>i:nth-child(2) {
      transform: rotate(@rotate2) translateX(@translateX2);
    }

    & > i::before {
      content: '\f30b';
      color: green;
      visibility: hidden;
    }

    & > i::after {
      content: '\f30a';
      color: red;
      line-height: 0.60em;
      visibility: hidden;
    }

    & > i.show-win::after, & > i.show-lose::before, &>i.show::after,  &>i.show::after {
      visibility:visible;
    }
  }
});